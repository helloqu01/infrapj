# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code 
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '18.x'

#       - name: Install dependencies for Next.js
#         run: |
#           cd next-app
#           npm install

#       - name: Build Next.js
#         run: |
#            cd next-app
#            npm run build

#       # 1. 프론트엔드 배포
      
#       # 추가: Next.js Docker 이미지 빌드 및 ECR 푸시
#       - name: Build and push Next.js Docker image
#         run: |
#           cd next-app
#           docker build -t next-app .
#           docker tag next-app:latest 743316907132.dkr.ecr.us-east-1.amazonaws.com/next-app:latest

#           aws ecr get-login-password --region ${{ secrets.AWS_REGION_FRONT }} \
#             | docker login --username AWS --password-stdin 743316907132.dkr.ecr.us-east-1.amazonaws.com

#           docker push 743316907132.dkr.ecr.us-east-1.amazonaws.com/next-app:latest
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION_FRONT: ${{ secrets.AWS_REGION_FRONT }}

#       - name: Update Next.js App Runner Service
#         run: |
#           echo '{
#             "ImageRepository": {
#               "ImageIdentifier": "743316907132.dkr.ecr.us-east-1.amazonaws.com/next-app:latest",
#               "ImageRepositoryType": "ECR",
#               "ImageConfiguration": {
#                 "Port": "3000"
#               }
#             },
#             "AutoDeploymentsEnabled": true
#           }' > apprunner-next-config.json

#           aws apprunner update-service \
#             --service-arn ${{ secrets.APP_RUNNER_FRONT_ARN }} \
#             --source-configuration file://apprunner-next-config.json \
#             --region ${{ secrets.AWS_REGION_FRONT }}
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION_FRONT: ${{ secrets.AWS_REGION_FRONT }}
#           APP_RUNNER_FRONT_ARN: ${{ secrets.APP_RUNNER_FRONT_ARN }}
          
#       # 2. 백엔드 배포 (Nest.js 앱을 ECR 배포)
#       - name: Build and push Docker image to ECR
#         run: |
#           cd nest-api
#           docker build --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} -t nest-api .
#           docker tag nest-api:latest 743316907132.dkr.ecr.us-east-1.amazonaws.com/nest-api:latest

#           # Login to AWS ECR
#           aws ecr get-login-password --region ${{ secrets.AWS_REGION_BACK }} \
#             | docker login --username AWS --password-stdin 743316907132.dkr.ecr.us-east-1.amazonaws.com

#           # Push the image to ECR
#           docker push 743316907132.dkr.ecr.us-east-1.amazonaws.com/nest-api:latest
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: ${{ secrets.AWS_REGION_BACK }}
#           DATABASE_URL: ${{ secrets.DATABASE_URL }}

#       - name: Update App Runner Service
#         run: |
#             echo '{
#               "ImageRepository": {
#                 "ImageIdentifier": "743316907132.dkr.ecr.us-east-1.amazonaws.com/nest-api:latest",
#                 "ImageRepositoryType": "ECR",
#                 "ImageConfiguration": {
#                   "Port": "8080",
#                   "RuntimeEnvironmentVariables": {
#                     "DATABASE_URL": "${{ secrets.DATABASE_URL }}",
#                     "JWT_ACCESS_SECRET": "${{ secrets.JWT_ACCESS_SECRET }}",
#                     "JWT_REFRESH_SECRET": "${{ secrets.JWT_REFRESH_SECRET }}"
#                   }
#                 }
#               },
#               "AutoDeploymentsEnabled": true
#             }' > apprunner-source.json
            
#             aws apprunner update-service \
#               --service-arn ${{ secrets.APP_RUNNER_SERVICE_ARN }} \
#               --source-configuration file://apprunner-source.json \
#               --region ${{ secrets.AWS_REGION_BACK }}
#         env:
#             AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#             AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#             AWS_REGION: ${{ secrets.AWS_REGION_BACK }}
#             DATABASE_URL: ${{ secrets.DATABASE_URL }}
#             JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
#             JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
#             APP_RUNNER_SERVICE_ARN: ${{ secrets.APP_RUNNER_SERVICE_ARN }}
        