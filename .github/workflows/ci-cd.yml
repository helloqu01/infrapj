name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때마다 실행
  pull_request:
    branches:
      - main  # main 브랜치에 대한 PR이 생길 때마다 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies for Next.js
        run: |
          cd next-app
          npm install

      - name: Build Next.js
        run: |
          cd next-app
          npm run build

      # 1. 프론트엔드 배포 (Next.js 앱을 S3에 배포)
      - name: Deploy Next.js to S3
        run: |
          aws s3 sync next-app/out/ s3://<MY_NEXT_APP_BUCKET> --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION_FRONT }}

      # 2. 백엔드 배포 (Nest.js 앱을 ECS Fargate에 배포)
      - name: Build and push Docker image to ECR
        run: |
          cd nest-api
          docker build -t nest-api .
          docker tag nest-api:latest <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com/nest-api:latest
          
          # Login to ECR and push image
          aws ecr get-login-password --region ${{ secrets.AWS_REGION_BACK }} | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com
          docker push <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com/nest-api:latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION_BACK }}

      - name: Update ECS Fargate Service
        run: |
          # 새 태스크 정의를 등록합니다. 아래 값들은 실제 환경에 맞게 수정하세요.
          TASK_DEF=$(aws ecs register-task-definition \
            --family nest-api-task \
            --execution-role-arn arn:aws:iam::<AWS_ACCOUNT_ID>:role/<ECS_TASK_EXECUTION_ROLE> \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --cpu "256" --memory "512" \
            --container-definitions "[{\"name\": \"nest-api\",\"image\": \"<AWS_ACCOUNT_ID>.dkr.ecr
